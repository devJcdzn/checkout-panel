// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  image       String?
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Checkout Checkout[]
  Member   Member?    @relation(fields: [memberId], references: [id])
  memberId Int?
}

model Checkout {
  id        Int     @id @default(autoincrement())
  slug      String
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  hash      String  @unique @default(cuid())

  color        String?
  lightMode    Boolean? @default(false)
  redirectLink String?

  topBoxColor     String?
  topBoxPhrase    String?
  bottomBoxColor  String?
  bottomBoxPhrase String?
  timer           Int?

  banner       String?
  bottomBanner String?
  testimonials String?

  impressions Int     @default(0)
  conversions Int     @default(0)
  model       String? @default("sunize")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Payment   Payment[]
  Member    Member?   @relation(fields: [memberId], references: [id])
  memberId  Int?
}

model Payment {
  id         String   @id @default(cuid())
  checkoutId Int
  checkout   Checkout @relation(fields: [checkoutId], references: [id], onDelete: Cascade)

  amount     Float
  expiration Int

  status      String?
  paymentCode String?
  paymentUrl  String?

  customerName  String
  customerEmail String
  customerTax   String?

  transactionId String?   @unique
  paymentDate   DateTime?

  createdAt DateTime @default(now())
  Member    Member?  @relation(fields: [memberId], references: [id])
  memberId  Int?
}

enum Role {
  ADMIN
  MEMBER
}

model Member {
  id       Int     @id @default(autoincrement())
  name     String?
  user     String  @unique
  password String

  photoUrl String?
  role     Role    @default(MEMBER)

  products  Product[]
  checkouts Checkout[]
  payments  Payment[]
}
